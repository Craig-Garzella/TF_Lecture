{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"week11quiz","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"_zoFxohvfvva","colab_type":"text"},"cell_type":"markdown","source":["**Week 11 QUIZ Datamining - Applications of Data Mining with Tensorflow ---Basic Linear Regression**"]},{"metadata":{"id":"jfygpn-cgGBA","colab_type":"text"},"cell_type":"markdown","source":["**INSTRUCTIONS**"]},{"metadata":{"id":"ZjCPdojYgKfu","colab_type":"text"},"cell_type":"markdown","source":["\n","*  PLEASE COPY THIS NOTEBOOK TO YOUR OWN DRIVE. Rename the notebook as your lastname_week11 example: Garzella_week11\n","\n","* Which Runtime would be the best for this application? Select the most applicable in your runtime environment as displayed in class. \n","\n","\n","*   Import the ADULT dataset using the code below the import statements. You must run the cell then upload the data from your computer. \n","*   Create a basic tensor flow model incorporating all that you have learned or anything you want to experiment with.\n","*   When finished. Upload THIS notebook to the submisison in blackboard. To do so click the file > download as IPYNB. \n","\n"]},{"metadata":{"id":"Parfd66egeBW","colab_type":"text"},"cell_type":"markdown","source":["**FOR FULL POINTS, YOU MUST INCLUDE...**\n","\n","\n","\n","*   Proper Set up including preprocessing and normalization (if needed)\n","*   Define your target features and columns\n","*   Define the regression and model parameters\n","*   An input function\n","*   Train your model\n","*   Evaluate your model (using code provided)\n","*   Graph your model (using code provided)\n","\n"]},{"metadata":{"id":"g8v_X9wEf-SQ","colab_type":"code","colab":{}},"cell_type":"code","source":["from __future__ import print_function\n","\n","import math\n","\n","from IPython import display\n","from matplotlib import cm\n","from matplotlib import gridspec\n","from matplotlib import pyplot as plt\n","import numpy as np\n","import pandas as pd\n","from sklearn import metrics\n","import tensorflow as tf\n","from tensorflow.python.data import Dataset\n","from sklearn import preprocessing\n","\n","tf.logging.set_verbosity(tf.logging.ERROR)\n","pd.options.display.max_rows = 10\n","pd.options.display.float_format = '{:.1f}'.format"],"execution_count":0,"outputs":[]},{"metadata":{"id":"bZiOoSckIHYe","colab_type":"code","outputId":"6a6341f5-ac44-4c91-e68b-2523acdf4509","executionInfo":{"status":"ok","timestamp":1554492036216,"user_tz":300,"elapsed":16013,"user":{"displayName":"Joey Gaudy","photoUrl":"https://lh6.googleusercontent.com/-dx5Pt-WBSfQ/AAAAAAAAAAI/AAAAAAAAAAc/VRcvaM3Tub0/s64/photo.jpg","userId":"08757811603355058765"}},"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7Ci8vIE1heCBhbW91bnQgb2YgdGltZSB0byBibG9jayB3YWl0aW5nIGZvciB0aGUgdXNlci4KY29uc3QgRklMRV9DSEFOR0VfVElNRU9VVF9NUyA9IDMwICogMTAwMDsKCmZ1bmN0aW9uIF91cGxvYWRGaWxlcyhpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IHN0ZXBzID0gdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKTsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIC8vIENhY2hlIHN0ZXBzIG9uIHRoZSBvdXRwdXRFbGVtZW50IHRvIG1ha2UgaXQgYXZhaWxhYmxlIGZvciB0aGUgbmV4dCBjYWxsCiAgLy8gdG8gdXBsb2FkRmlsZXNDb250aW51ZSBmcm9tIFB5dGhvbi4KICBvdXRwdXRFbGVtZW50LnN0ZXBzID0gc3RlcHM7CgogIHJldHVybiBfdXBsb2FkRmlsZXNDb250aW51ZShvdXRwdXRJZCk7Cn0KCi8vIFRoaXMgaXMgcm91Z2hseSBhbiBhc3luYyBnZW5lcmF0b3IgKG5vdCBzdXBwb3J0ZWQgaW4gdGhlIGJyb3dzZXIgeWV0KSwKLy8gd2hlcmUgdGhlcmUgYXJlIG11bHRpcGxlIGFzeW5jaHJvbm91cyBzdGVwcyBhbmQgdGhlIFB5dGhvbiBzaWRlIGlzIGdvaW5nCi8vIHRvIHBvbGwgZm9yIGNvbXBsZXRpb24gb2YgZWFjaCBzdGVwLgovLyBUaGlzIHVzZXMgYSBQcm9taXNlIHRvIGJsb2NrIHRoZSBweXRob24gc2lkZSBvbiBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcCwKLy8gdGhlbiBwYXNzZXMgdGhlIHJlc3VsdCBvZiB0aGUgcHJldmlvdXMgc3RlcCBhcyB0aGUgaW5wdXQgdG8gdGhlIG5leHQgc3RlcC4KZnVuY3Rpb24gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpIHsKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIGNvbnN0IHN0ZXBzID0gb3V0cHV0RWxlbWVudC5zdGVwczsKCiAgY29uc3QgbmV4dCA9IHN0ZXBzLm5leHQob3V0cHV0RWxlbWVudC5sYXN0UHJvbWlzZVZhbHVlKTsKICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG5leHQudmFsdWUucHJvbWlzZSkudGhlbigodmFsdWUpID0+IHsKICAgIC8vIENhY2hlIHRoZSBsYXN0IHByb21pc2UgdmFsdWUgdG8gbWFrZSBpdCBhdmFpbGFibGUgdG8gdGhlIG5leHQKICAgIC8vIHN0ZXAgb2YgdGhlIGdlbmVyYXRvci4KICAgIG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSA9IHZhbHVlOwogICAgcmV0dXJuIG5leHQudmFsdWUucmVzcG9uc2U7CiAgfSk7Cn0KCi8qKgogKiBHZW5lcmF0b3IgZnVuY3Rpb24gd2hpY2ggaXMgY2FsbGVkIGJldHdlZW4gZWFjaCBhc3luYyBzdGVwIG9mIHRoZSB1cGxvYWQKICogcHJvY2Vzcy4KICogQHBhcmFtIHtzdHJpbmd9IGlucHV0SWQgRWxlbWVudCBJRCBvZiB0aGUgaW5wdXQgZmlsZSBwaWNrZXIgZWxlbWVudC4KICogQHBhcmFtIHtzdHJpbmd9IG91dHB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIG91dHB1dCBkaXNwbGF5LgogKiBAcmV0dXJuIHshSXRlcmFibGU8IU9iamVjdD59IEl0ZXJhYmxlIG9mIG5leHQgc3RlcHMuCiAqLwpmdW5jdGlvbiogdXBsb2FkRmlsZXNTdGVwKGlucHV0SWQsIG91dHB1dElkKSB7CiAgY29uc3QgaW5wdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaW5wdXRJZCk7CiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gZmFsc2U7CgogIGNvbnN0IG91dHB1dEVsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChvdXRwdXRJZCk7CiAgb3V0cHV0RWxlbWVudC5pbm5lckhUTUwgPSAnJzsKCiAgY29uc3QgcGlja2VkUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBpbnB1dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2hhbmdlJywgKGUpID0+IHsKICAgICAgcmVzb2x2ZShlLnRhcmdldC5maWxlcyk7CiAgICB9KTsKICB9KTsKCiAgY29uc3QgY2FuY2VsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnV0dG9uJyk7CiAgaW5wdXRFbGVtZW50LnBhcmVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoY2FuY2VsKTsKICBjYW5jZWwudGV4dENvbnRlbnQgPSAnQ2FuY2VsIHVwbG9hZCc7CiAgY29uc3QgY2FuY2VsUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICBjYW5jZWwub25jbGljayA9ICgpID0+IHsKICAgICAgcmVzb2x2ZShudWxsKTsKICAgIH07CiAgfSk7CgogIC8vIENhbmNlbCB1cGxvYWQgaWYgdXNlciBoYXNuJ3QgcGlja2VkIGFueXRoaW5nIGluIHRpbWVvdXQuCiAgY29uc3QgdGltZW91dFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9LCBGSUxFX0NIQU5HRV9USU1FT1VUX01TKTsKICB9KTsKCiAgLy8gV2FpdCBmb3IgdGhlIHVzZXIgdG8gcGljayB0aGUgZmlsZXMuCiAgY29uc3QgZmlsZXMgPSB5aWVsZCB7CiAgICBwcm9taXNlOiBQcm9taXNlLnJhY2UoW3BpY2tlZFByb21pc2UsIHRpbWVvdXRQcm9taXNlLCBjYW5jZWxQcm9taXNlXSksCiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdzdGFydGluZycsCiAgICB9CiAgfTsKCiAgaWYgKCFmaWxlcykgewogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2U6IHsKICAgICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICAgIH0KICAgIH07CiAgfQoKICBjYW5jZWwucmVtb3ZlKCk7CgogIC8vIERpc2FibGUgdGhlIGlucHV0IGVsZW1lbnQgc2luY2UgZnVydGhlciBwaWNrcyBhcmUgbm90IGFsbG93ZWQuCiAgaW5wdXRFbGVtZW50LmRpc2FibGVkID0gdHJ1ZTsKCiAgZm9yIChjb25zdCBmaWxlIG9mIGZpbGVzKSB7CiAgICBjb25zdCBsaSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7CiAgICBsaS5hcHBlbmQoc3BhbihmaWxlLm5hbWUsIHtmb250V2VpZ2h0OiAnYm9sZCd9KSk7CiAgICBsaS5hcHBlbmQoc3BhbigKICAgICAgICBgKCR7ZmlsZS50eXBlIHx8ICduL2EnfSkgLSAke2ZpbGUuc2l6ZX0gYnl0ZXMsIGAgKwogICAgICAgIGBsYXN0IG1vZGlmaWVkOiAkewogICAgICAgICAgICBmaWxlLmxhc3RNb2RpZmllZERhdGUgPyBmaWxlLmxhc3RNb2RpZmllZERhdGUudG9Mb2NhbGVEYXRlU3RyaW5nKCkgOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnbi9hJ30gLSBgKSk7CiAgICBjb25zdCBwZXJjZW50ID0gc3BhbignMCUgZG9uZScpOwogICAgbGkuYXBwZW5kQ2hpbGQocGVyY2VudCk7CgogICAgb3V0cHV0RWxlbWVudC5hcHBlbmRDaGlsZChsaSk7CgogICAgY29uc3QgZmlsZURhdGFQcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHsKICAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKICAgICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7CiAgICAgICAgcmVzb2x2ZShlLnRhcmdldC5yZXN1bHQpOwogICAgICB9OwogICAgICByZWFkZXIucmVhZEFzQXJyYXlCdWZmZXIoZmlsZSk7CiAgICB9KTsKICAgIC8vIFdhaXQgZm9yIHRoZSBkYXRhIHRvIGJlIHJlYWR5LgogICAgbGV0IGZpbGVEYXRhID0geWllbGQgewogICAgICBwcm9taXNlOiBmaWxlRGF0YVByb21pc2UsCiAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgYWN0aW9uOiAnY29udGludWUnLAogICAgICB9CiAgICB9OwoKICAgIC8vIFVzZSBhIGNodW5rZWQgc2VuZGluZyB0byBhdm9pZCBtZXNzYWdlIHNpemUgbGltaXRzLiBTZWUgYi82MjExNTY2MC4KICAgIGxldCBwb3NpdGlvbiA9IDA7CiAgICB3aGlsZSAocG9zaXRpb24gPCBmaWxlRGF0YS5ieXRlTGVuZ3RoKSB7CiAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGgubWluKGZpbGVEYXRhLmJ5dGVMZW5ndGggLSBwb3NpdGlvbiwgTUFYX1BBWUxPQURfU0laRSk7CiAgICAgIGNvbnN0IGNodW5rID0gbmV3IFVpbnQ4QXJyYXkoZmlsZURhdGEsIHBvc2l0aW9uLCBsZW5ndGgpOwogICAgICBwb3NpdGlvbiArPSBsZW5ndGg7CgogICAgICBjb25zdCBiYXNlNjQgPSBidG9hKFN0cmluZy5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCwgY2h1bmspKTsKICAgICAgeWllbGQgewogICAgICAgIHJlc3BvbnNlOiB7CiAgICAgICAgICBhY3Rpb246ICdhcHBlbmQnLAogICAgICAgICAgZmlsZTogZmlsZS5uYW1lLAogICAgICAgICAgZGF0YTogYmFzZTY0LAogICAgICAgIH0sCiAgICAgIH07CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPQogICAgICAgICAgYCR7TWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCl9JSBkb25lYDsKICAgIH0KICB9CgogIC8vIEFsbCBkb25lLgogIHlpZWxkIHsKICAgIHJlc3BvbnNlOiB7CiAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgIH0KICB9Owp9CgpzY29wZS5nb29nbGUgPSBzY29wZS5nb29nbGUgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYiA9IHNjb3BlLmdvb2dsZS5jb2xhYiB8fCB7fTsKc2NvcGUuZ29vZ2xlLmNvbGFiLl9maWxlcyA9IHsKICBfdXBsb2FkRmlsZXMsCiAgX3VwbG9hZEZpbGVzQ29udGludWUsCn07Cn0pKHNlbGYpOwo=","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":""}},"base_uri":"https://localhost:8080/","height":75}},"cell_type":"code","source":["from google.colab import files ## this is the function used to allow import of external data. \n","uploaded = files.upload()"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-abeb6256-5984-4a53-8bc2-6224639aed57\" name=\"files[]\" multiple disabled />\n","     <output id=\"result-abeb6256-5984-4a53-8bc2-6224639aed57\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving adult_numeric.csv to adult_numeric.csv\n"],"name":"stdout"}]},{"metadata":{"id":"r0RgFwufIYWJ","colab_type":"code","colab":{}},"cell_type":"code","source":["import io ## this is how your import your own csv to a colab notebook \n","adult = pd.read_csv(io.BytesIO(uploaded['adult_numeric.csv']))"],"execution_count":0,"outputs":[]},{"metadata":{"id":"Pe0951VtIp-R","colab_type":"code","outputId":"9aadc071-21ee-418b-8d22-af24ff09ffb7","executionInfo":{"status":"error","timestamp":1554494183173,"user_tz":420,"elapsed":520,"user":{"displayName":"Olalekan Hassan","photoUrl":"https://lh5.googleusercontent.com/-5l3TYXQP_aE/AAAAAAAAAAI/AAAAAAAAABA/UnGa0jte3Kc/s64/photo.jpg","userId":"07846477117459901895"}},"colab":{"base_uri":"https://localhost:8080/","height":164}},"cell_type":"code","source":["adult.head() ## to check if import was successful"],"execution_count":10,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-10-b50c16a139ba>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0madult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;31m## to check if import was successful\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'adult' is not defined"]}]},{"metadata":{"id":"9d3r2ANUiYWz","colab_type":"text"},"cell_type":"markdown","source":["** Your problem **\n","\n","---\n","\n","\n","\n","\n","Import and create a basic linear regression model in tensorflow to predict an outcome based other features of the data. \n","\n","Things to consider: some columns may need to be normalized.  Which ones? why? \n","\n","What could you predict using this data that would be the most useful?\n","After you run your model. Did you succeed? did your approach produce any useable results? Was using a linear regression on this data appropriate? why? why not?\n","\n","\n","*remember* as long as you create the code yourself and come up with some answer you have succeeded in your task. A bad regresion and a large error is still an answer"]},{"metadata":{"id":"8sxMKFyT-QRn","colab_type":"code","outputId":"06f9e1c9-2be2-40d4-fc7b-c907d44805cc","executionInfo":{"status":"ok","timestamp":1554493408456,"user_tz":300,"elapsed":428,"user":{"displayName":"Joey Gaudy","photoUrl":"https://lh6.googleusercontent.com/-dx5Pt-WBSfQ/AAAAAAAAAAI/AAAAAAAAAAc/VRcvaM3Tub0/s64/photo.jpg","userId":"08757811603355058765"}},"colab":{"base_uri":"https://localhost:8080/","height":204}},"cell_type":"code","source":["adult1 = adult\n","adult1.head()"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>workclass</th>\n","      <th>educationyears</th>\n","      <th>maritalstatus</th>\n","      <th>occupation</th>\n","      <th>relationship</th>\n","      <th>race</th>\n","      <th>sex</th>\n","      <th>hoursperweek</th>\n","      <th>incomeUSD</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>39</td>\n","      <td>8</td>\n","      <td>13</td>\n","      <td>8</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>40</td>\n","      <td>43747</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>50</td>\n","      <td>7</td>\n","      <td>13</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>13</td>\n","      <td>38907</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>38</td>\n","      <td>5</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>40</td>\n","      <td>25055</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>53</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>5</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>40</td>\n","      <td>26733</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>28</td>\n","      <td>5</td>\n","      <td>13</td>\n","      <td>5</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>40</td>\n","      <td>23429</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   age  workclass  educationyears  maritalstatus  occupation  relationship  \\\n","0   39          8              13              8           2             2   \n","1   50          7              13              7           5             1   \n","2   38          5               9              5           7             2   \n","3   53          5               7              5           7             1   \n","4   28          5              13              5          11             6   \n","\n","   race  sex  hoursperweek  incomeUSD  \n","0     5    2            40      43747  \n","1     5    2            13      38907  \n","2     5    2            40      25055  \n","3     3    2            40      26733  \n","4     3    1            40      23429  "]},"metadata":{"tags":[]},"execution_count":21}]},{"metadata":{"id":"oTxlYMRI-Ayl","colab_type":"code","outputId":"41f5c6b1-f492-4b98-b88d-231dd9fc364f","executionInfo":{"status":"ok","timestamp":1554493409967,"user_tz":300,"elapsed":393,"user":{"displayName":"Joey Gaudy","photoUrl":"https://lh6.googleusercontent.com/-dx5Pt-WBSfQ/AAAAAAAAAAI/AAAAAAAAAAc/VRcvaM3Tub0/s64/photo.jpg","userId":"08757811603355058765"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["age = np.array(adult1['age'])\n","normalized_age = preprocessing.normalize([age])\n","print(normalized_age)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[[0.00528154 0.0067712  0.00514611 ... 0.00785459 0.00297933 0.00704205]]\n"],"name":"stdout"}]},{"metadata":{"id":"B4ABmKogAYSO","colab_type":"code","outputId":"f589f426-b913-459d-a679-b54a03ea0ac2","executionInfo":{"status":"ok","timestamp":1554493411298,"user_tz":300,"elapsed":437,"user":{"displayName":"Joey Gaudy","photoUrl":"https://lh6.googleusercontent.com/-dx5Pt-WBSfQ/AAAAAAAAAAI/AAAAAAAAAAc/VRcvaM3Tub0/s64/photo.jpg","userId":"08757811603355058765"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["education = np.array(adult1['educationyears'])\n","normalized_education = preprocessing.normalize([education])\n","print(normalized_education)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[[0.00692473 0.00692473 0.00479405 ... 0.00479405 0.00479405 0.00479405]]\n"],"name":"stdout"}]},{"metadata":{"id":"40TuJafBAZl-","colab_type":"code","outputId":"fe42d50b-13cd-4be8-b8ad-4f251ed1e707","executionInfo":{"status":"ok","timestamp":1554493412172,"user_tz":300,"elapsed":340,"user":{"displayName":"Joey Gaudy","photoUrl":"https://lh6.googleusercontent.com/-dx5Pt-WBSfQ/AAAAAAAAAAI/AAAAAAAAAAc/VRcvaM3Tub0/s64/photo.jpg","userId":"08757811603355058765"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"cell_type":"code","source":["hours = np.array(adult1['hoursperweek'])\n","normalized_hours = preprocessing.normalize([hours])\n","print(normalized_hours)"],"execution_count":0,"outputs":[{"output_type":"stream","text":["[[0.00524289 0.00170394 0.00524289 ... 0.00524289 0.00262145 0.00524289]]\n"],"name":"stdout"}]},{"metadata":{"id":"Ux213C_gjca7","colab_type":"code","outputId":"aee1c3fa-3eaa-47be-9fa5-1b7d2af46797","executionInfo":{"status":"ok","timestamp":1554493507898,"user_tz":300,"elapsed":497,"user":{"displayName":"Joey Gaudy","photoUrl":"https://lh6.googleusercontent.com/-dx5Pt-WBSfQ/AAAAAAAAAAI/AAAAAAAAAAc/VRcvaM3Tub0/s64/photo.jpg","userId":"08757811603355058765"}},"colab":{"base_uri":"https://localhost:8080/","height":87}},"cell_type":"code","source":["# Define the input feature: total_rooms.\n","my_features = normalized_age, normalized_education, normalized_hours\n","# Configure a numeric feature column for total_rooms.\n","feature_columns = [tf.feature_column.numeric_column(\"total_rooms\")]\n","\n","# Define the label.\n","targets = california_housing_dataframe[\"median_house_value\"]\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["(array([[0.00528154, 0.0067712 , 0.00514611, ..., 0.00785459, 0.00297933,\n","        0.00704205]]), array([[0.00692473, 0.00692473, 0.00479405, ..., 0.00479405, 0.00479405,\n","        0.00479405]]), array([[0.00524289, 0.00170394, 0.00524289, ..., 0.00524289, 0.00262145,\n","        0.00524289]]))\n"],"name":"stdout"}]},{"metadata":{"id":"i3TXbttfCAvT","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}